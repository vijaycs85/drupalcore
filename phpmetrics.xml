<?xml version="1.0" encoding="UTF-8"?>
<pmd version="@package_version@" timestamp="2019-08-14T13:45:51+00:00">
  <file name="Drupal\Core\KeyValueStore\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.129) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Serialization (0.192)
* Drupal\Core\Database (0.157)</violation>
  </file>
  <file name="Drupal\Core\Database\Connection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (48, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=15)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 69)
* Component uses 230 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.01 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 490 logical lines of code
* Class has 1512 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.157) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Datetime (0.25)</violation>
  </file>
  <file name="Drupal\Core\Database\Install\Tasks">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\sqlite\Connection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (24, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=18)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 36)
* Component uses 133 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.31 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 242 logical lines of code
* Class has 426 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\sqlite\Statement">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\sqlite\Schema">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 108)
* Component uses 328 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 487 logical lines of code
* Class has 699 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\mysql\Connection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.71 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\mysql\Schema">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 95)
* Component uses 313 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.14 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 411 logical lines of code
* Class has 614 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Connection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 32)
* Component uses 132 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 202 logical lines of code
* Class has 367 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Insert">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Update">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Install\Tasks">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\NativeUpsert">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Schema">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 125)
* Component uses 488 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 595 logical lines of code
* Class has 924 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Driver\pgsql\Select">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Database\Database">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=18)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 37)
* Component uses 83 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\Statement">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Database\Schema">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.73 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Database\StatementPrefetch">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 48)
* Component uses 138 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.89 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 288 logical lines of code
* Class has 478 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Query\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.147) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Database (0.157)
* Drupal\Core\Utility (0.571)</violation>
  </file>
  <file name="Drupal\Core\Database\Query\SelectExtender">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 4)
* Component uses 75 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 303 logical lines of code
* Class has 533 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Query\Merge">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Database\Query\Select">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 89)
* Component uses 247 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.09 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 505 logical lines of code
* Class has 837 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Database\Query\Condition">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 21)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.9 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 231 logical lines of code
* Class has 375 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Form\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.062) than 17 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Render\MainContent (0.929)
* Drupal\Core\Routing (0.253)
* Drupal\Core\Ajax (0.293)
* Drupal\Core\Render (0.198)
* Drupal\Core\KeyValueStore (0.129)
* Drupal\Core\Extension (0.144)
* Drupal\Core\Session (0.066)
* Drupal\Core\Access (0.171)
* Drupal\Core\PageCache (0.273)
* Drupal\Core\Site (0.13)
* Drupal\Core\DependencyInjection (0.171)
* Drupal\Core\Config (0.212)
* Drupal\Core (0.225)
* Drupal\Core\StringTranslation (0.071)
* Drupal\Core\Security (0.296)
* Drupal\Core\Theme (0.511)
* Drupal\Core\Form\Exception (0.75)</violation>
  </file>
  <file name="Drupal\Core\Form\FormValidator">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 68)
* Component uses 98 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 26)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Form\FormState">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (43, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 27)
* Component uses 174 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.3 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 524 logical lines of code
* Class has 1197 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Form\FormStateInterface">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 1)
* Component uses  operators

Maybe you should delegate some code to other objects.</violation>
  </file>
  <file name="Drupal\Core\Form\FormStateDecoratorBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 1)
* Component uses 90 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 415 logical lines of code
* Class has 696 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Form\FormBuilder">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 171)
* Component uses 371 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 53)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 579 logical lines of code
* Class has 1222 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 27, so this class uses 27 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.225) than 12 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Utility (0.571)
* Drupal\Core\DependencyInjection\Compiler (0.917)
* Drupal\Core\Render\MainContent (0.929)
* Drupal\Core\Cache\Context (0.643)
* Drupal\Core\Security (0.296)
* Drupal\Core\Routing (0.253)
* Drupal\Core\Queue (0.737)
* Drupal\Component\Datetime (0.25)
* Drupal\Core\Test (0.857)
* Drupal\Component\FileCache (0.308)
* Drupal\Core\File\MimeType (0.75)
* Drupal\Core\Http (0.857)</violation>
  </file>
  <file name="Drupal\Core\Password\PhpassHashedPassword">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Locale\CountryManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\ThemeHandler">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Extension\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.144) than 8 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Config (0.212)
* Drupal\Core\Extension\Exception (0.2)
* Drupal\Core (0.225)
* Drupal\Core\Serialization (0.214)
* Drupal\Component\FileCache (0.308)
* Drupal\Core\Extension\Discovery (0.75)
* Drupal\Core\Asset (0.771)
* Drupal\Core\Routing (0.253)</violation>
  </file>
  <file name="Drupal\Core\Extension\ThemeExtensionList">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\ModuleExtensionList">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\ModuleInstaller">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 64)
* Component uses 128 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 30)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.31 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 275 logical lines of code
* Class has 495 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Extension\ExtensionDiscovery">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\ExtensionList">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\ThemeInstaller">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Extension\InfoParserDynamic">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Extension\ModuleHandler">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (26, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 69)
* Component uses 218 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.75 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 390 logical lines of code
* Class has 723 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Extension\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Cache\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.071) than 6 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Site (0.13)
* Drupal\Core\Database\Query (0.147)
* Drupal\Core\Database (0.157)
* Drupal\Core (0.225)
* Drupal\Core\Lock (0.111)
* Drupal\Core\PhpStorage (0.5)</violation>
  </file>
  <file name="Drupal\Core\Cache\Context\CacheContextsManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Cache\DatabaseBackend">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 38)
* Component uses 96 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.03 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 218 logical lines of code
* Class has 404 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Cache\ApcuBackend">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Cache\CacheCollector">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Asset\CssOptimizer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Asset\CssCollectionOptimizer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Asset\JsCollectionOptimizer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Asset\LibraryDiscoveryParser">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 64)
* Component uses 143 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 39)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.26 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 227 logical lines of code
* Class has 453 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Asset\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Asset\JsCollectionRenderer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Asset\AssetResolver">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.07 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\PageCache\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.273) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\PageCache\RequestPolicy (0.6)</violation>
  </file>
  <file name="Drupal\Core\Test\FunctionalTestSetupTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 255 logical lines of code
* Class has 539 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Test\AssertMailTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Update\UpdateRegistry">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Update\UpdateKernel">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Access\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.171) than 8 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Routing (0.253)
* Drupal\Core\Config (0.212)
* Drupal\Core\ParamConverter (0.467)
* Drupal\Core\Controller (0.265)
* Drupal\Core (0.225)
* Drupal\Core\RouteProcessor (0.429)
* Drupal\Core\Security (0.296)
* Drupal\Core\Render (0.198)</violation>
  </file>
  <file name="Drupal\Core\Access\AccessResult">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 62)
* Component uses 115 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 31)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 212 logical lines of code
* Class has 424 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\File\FileSystem">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 93)
* Component uses 253 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.29 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 416 logical lines of code
* Class has 653 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\File\MimeType\ExtensionMimeTypeGuesser">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.9 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\File\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Config\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.212) than 7 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Config\Importer (0.667)
* Drupal\Core\Serialization (0.214)
* Drupal\Component\Diff\DifferenceEngine (0.667)
* Drupal\Core\Config\Entity (0.253)
* Drupal\Core\TypedData (0.221)
* Drupal\Core\Config\Schema (0.813)
* Drupal\Component\FileCache (0.308)</violation>
  </file>
  <file name="Drupal\Core\Config\DatabaseStorage">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\ConfigImporter">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 73)
* Component uses 218 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 471 logical lines of code
* Class has 989 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\ConfigEntityStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.82 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 215 logical lines of code
* Class has 448 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.253) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Cache\MemoryCache (0.267)
* Drupal\Core\Config\Schema (0.813)</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\ConfigEntityBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (31, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 45)
* Component uses 130 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.99 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 315 logical lines of code
* Class has 578 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\ConfigDependencyDeleteFormTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\DraggableListBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\ConfigDependencyManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\Query\QueryFactory">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\Query\Query">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\Query\Condition">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Entity\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.2) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Config (0.212)</violation>
  </file>
  <file name="Drupal\Core\Config\InstallStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\CachedStorage">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\ConfigManager">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 43)
* Component uses 139 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 260 logical lines of code
* Class has 462 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\Config">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\StorageComparer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 213 logical lines of code
* Class has 417 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\TypedConfigManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\Schema\SchemaCheckTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Config\FileStorage">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 35)
* Component uses 126 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.7 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 202 logical lines of code
* Class has 344 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\ConfigInstaller">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 65)
* Component uses 200 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 336 logical lines of code
* Class has 656 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Config\ConfigFactory">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Config\ExtensionInstallStorage">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Config\StorableConfigBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Security\DoTrustedCallbackTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\TypedData\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.221) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Validation (0.591)
* Drupal\Core\TypedData\Validation (0.95)</violation>
  </file>
  <file name="Drupal\Core\TypedData\ListDataDefinition">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\TypedData\Plugin\DataType\ItemList">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 34)
* Component uses 68 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\TypedData\DataDefinition">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\TypedData\Type\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.214) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\TypedData (0.221)
* Drupal\Core\Datetime (0.219)</violation>
  </file>
  <file name="Drupal\Core\TypedData\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\TypedData\Validation\RecursiveValidator">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\TypedData\Validation\ExecutionContext">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\TypedData\TypedDataManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Datetime\DateHelper">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (20, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=20)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 40)
* Component uses 134 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Datetime\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.219) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Datetime (0.25)
* Drupal\Core\Config\Entity (0.253)</violation>
  </file>
  <file name="Drupal\Core\Datetime\Element\Datetime">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 52)
* Component uses 109 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.18 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Datetime\Element\Datelist">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 64)
* Component uses 129 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.28 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Datetime\DateFormatter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.06 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.129) than 27 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\Display (0.238)
* Drupal\Core\Plugin\Context (0.432)
* Drupal\Core\Validation (0.591)
* Drupal\Core\Cache\MemoryCache (0.267)
* Drupal\Core\Entity\Query (0.313)
* Drupal\Core\Field (0.213)
* Drupal\user (0.621)
* Drupal\Core\DependencyInjection (0.171)
* Drupal\Core\Access (0.171)
* Drupal\Core\TypedData (0.221)
* Drupal\Core\Config\Entity (0.253)
* Drupal\Core\TempStore (0.211)
* Drupal\Core\Routing (0.253)
* Drupal\Core\Entity\Exception (0.364)
* Drupal\Component\Plugin\Definition (0.333)
* Drupal\Core\Extension (0.144)
* Drupal\Component\Datetime (0.25)
* Drupal\Core\Entity\Entity (0.543)
* Drupal\Core\Security (0.296)
* Drupal\Core\Theme (0.511)
* Drupal\Core\Render (0.198)
* Drupal\Core\Entity\EntityReferenceSelection (0.786)
* Drupal\Core (0.225)
* Drupal\Core\Config\Entity\Exception (0.2)
* Drupal\Component\Plugin\Discovery (0.154)
* Drupal\Core\Controller (0.265)
* Drupal\Core\Plugin\Discovery (0.215)</violation>
  </file>
  <file name="Drupal\Core\Entity\KeyValueStore\KeyValueEntityStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityRepository">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityStorageBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 36)
* Component uses 94 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 246 logical lines of code
* Class has 553 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\RevisionLogEntityTrait">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityResolverManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.68 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Form\DeleteMultipleForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (57, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 175)
* Component uses 389 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 21)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 805 logical lines of code
* Class has 1314 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityType">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 36)
* Component uses 140 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.04 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 418 logical lines of code
* Class has 865 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\TypedData\EntityDataDefinition">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.543) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Validation (0.591)</violation>
  </file>
  <file name="Drupal\Core\Entity\Entity\EntityViewDisplay">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Entity\EntityFormDisplay">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.77 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityDisplayRepository">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityConfirmFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityReferenceSelection\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\Plugin\EntityReferenceSelection\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.727) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\EntityReferenceSelection (0.786)</violation>
  </file>
  <file name="Drupal\Core\Entity\Plugin\EntityReferenceSelection\PhpSelection">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Entity\Plugin\EntityReferenceSelection\DefaultSelection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.34 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Plugin\Validation\Constraint\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.75) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\EntityReferenceSelection (0.786)</violation>
  </file>
  <file name="Drupal\Core\Entity\Plugin\Validation\Constraint\ValidReferenceConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Entity\Element\EntityAutocomplete">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 48)
* Component uses 118 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Element\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.769) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\EntityReferenceSelection (0.786)</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityDisplayBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 61)
* Component uses 142 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.19 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 295 logical lines of code
* Class has 543 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 31)
* Component uses 71 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.8 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 200 logical lines of code
* Class has 416 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityStorageBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (20, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 121)
* Component uses 257 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 546 logical lines of code
* Class has 1001 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 21, so this class uses 21 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Entity\Controller\EntityController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityViewBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 39)
* Component uses 116 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.2 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 228 logical lines of code
* Class has 459 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Entity\Schema\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityTypeInterface">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 1)
* Component uses  operators

Maybe you should delegate some code to other objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityType">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Entity\ContentEntityNullStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=21)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (40, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=14)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 45)
* Component uses 167 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 359 logical lines of code
* Class has 623 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityConfirmFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\Display\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.238) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Config\Entity (0.253)</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.8 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 201 logical lines of code
* Class has 394 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 1)
* Component uses 46 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.95 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 323 logical lines of code
* Class has 890 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Query\QueryBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (28, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.72 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 216 logical lines of code
* Class has 448 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\Query\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.313) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Utility (0.571)</violation>
  </file>
  <file name="Drupal\Core\Entity\Query\Sql\Tables">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 54)
* Component uses 182 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 42)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 224 logical lines of code
* Class has 435 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\Query\Sql\Query">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Query\Sql\Condition">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityDefinitionUpdateManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 33)
* Component uses 72 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 205 logical lines of code
* Class has 347 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityFieldManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 67)
* Component uses 166 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 26)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 305 logical lines of code
* Class has 573 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityTypeManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\EntityListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Entity\Sql\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.615) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\Schema (0.667)</violation>
  </file>
  <file name="Drupal\Core\Entity\Sql\SqlContentEntityStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (27, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 198)
* Component uses 452 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 25)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.26 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 940 logical lines of code
* Class has 1549 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 29, so this class uses 29 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Entity\Sql\SqlFieldableEntityTypeListenerTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.6 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Entity\Sql\DefaultTableMapping">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 52)
* Component uses 151 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.22 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 257 logical lines of code
* Class has 574 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Entity\Sql\SqlContentEntityStorageSchema">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 246)
* Component uses 585 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 21)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 8.32 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 1173 logical lines of code
* Class has 2175 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Mail\MailManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Mail\MailFormatHelper">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 49)
* Component uses 125 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 38)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.08 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 211 logical lines of code
* Class has 344 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Layout\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.722) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Annotation\Plugin\Discovery (0.846)</violation>
  </file>
  <file name="Drupal\Core\Layout\LayoutDefinition">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Layout\Icon\SvgIconBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Layout\LayoutPluginManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\PathProcessor\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.263) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Path (0.51)</violation>
  </file>
  <file name="Drupal\Core\Serialization\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Composer\Composer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.01 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Path\AliasManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Path\AliasStorage">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 236 logical lines of code
* Class has 335 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\ParamConverter\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.467) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Menu (0.623)</violation>
  </file>
  <file name="Drupal\Core\Discovery\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.429) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Discovery (0.625)</violation>
  </file>
  <file name="Drupal\Core\Plugin\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.117) than 7 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\DependencyInjection (0.171)
* Drupal\Component\Plugin\Discovery (0.154)
* Drupal\Core\Plugin\Context (0.432)
* Drupal\Component\Plugin\Context (0.231)
* Drupal\Core\Extension (0.144)
* Drupal\Core\Plugin\Discovery (0.215)
* Drupal\Core\Plugin\Factory (0.333)</violation>
  </file>
  <file name="Drupal\Core\Plugin\Context\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.432) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\Plugin\DataType (0.867)
* Drupal\Core\Entity\TypedData (0.625)</violation>
  </file>
  <file name="Drupal\Core\Plugin\Context\ContextDefinition">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 204 logical lines of code
* Class has 401 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Plugin\Context\ContextHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Plugin\Discovery\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.215) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Annotation\Plugin\Discovery (0.846)
* Drupal\Component\Discovery (0.625)
* Drupal\Core\Discovery (0.429)</violation>
  </file>
  <file name="Drupal\Core\Plugin\ContextAwarePluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Plugin\DefaultPluginManager">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Plugin\PluginDependencyTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Plugin\Factory\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.333) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Plugin\Factory (0.333)</violation>
  </file>
  <file name="Drupal\Core\Template\TwigExtension">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (23, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 53)
* Component uses 131 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.08 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 247 logical lines of code
* Class has 606 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Template\TwigNodeTrans">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Lock\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.111) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Database (0.157)</violation>
  </file>
  <file name="Drupal\Core\Lock\DatabaseLockBackend">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.198) than 7 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Cache\Context (0.643)
* Drupal\Core\Routing (0.253)
* Drupal\Core\Theme (0.511)
* Drupal\Core\Controller (0.265)
* Drupal\Core (0.225)
* Drupal\Core\Asset (0.771)
* Drupal\Core\Config (0.212)</violation>
  </file>
  <file name="Drupal\Core\Render\RenderCache">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Element">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Render\Renderer">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 89)
* Component uses 193 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 71)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.78 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 342 logical lines of code
* Class has 695 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Render\Element\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.475) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Template (0.833)</violation>
  </file>
  <file name="Drupal\Core\Render\Element\RenderElement">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 52)
* Component uses 92 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 36)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.89 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Element\Number">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Render\Element\Tableselect">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Element\HtmlTag">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Element\Table">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Element\MachineName">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\Placeholder\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Render\MainContent\HtmlRenderer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Render\HtmlResponseAttachmentsProcessor">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.88 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\ImageToolkit\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\CoreServiceProvider">
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 24, so this class uses 24 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Updater\Module">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Updater\Updater">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Language\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.034) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core (0.225)
* Drupal\Core\StringTranslation (0.071)</violation>
  </file>
  <file name="Drupal\Core\Language\LanguageManager">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\State\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.018) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\KeyValueStore (0.129)</violation>
  </file>
  <file name="Drupal\Core\Field\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.213) than 8 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Cache\MemoryCache (0.267)
* Drupal\Core\Action (0.516)
* Drupal\Core\Config\Entity (0.253)
* Drupal\Core\Field\TypedData (0.455)
* Drupal\Core\TypedData (0.221)
* Drupal\Component\Plugin\Factory (0.333)
* Drupal\Core\TypedData\Plugin\DataType (0.864)
* Drupal\Core\Field\Entity (0.857)</violation>
  </file>
  <file name="Drupal\Core\Field\FieldConfigBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (27, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 15)
* Component uses 94 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 254 logical lines of code
* Class has 557 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Field\WidgetBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 39)
* Component uses 156 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.8 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 284 logical lines of code
* Class has 481 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Field\Entity\BaseFieldOverride">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Field\FormatterPluginManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\FieldItemList">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (25, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 27)
* Component uses 99 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 226 logical lines of code
* Class has 382 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldWidget\EntityReferenceAutocompleteWidget">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldType\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.615) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\TypedData (0.625)</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (29, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=21)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 79)
* Component uses 212 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 349 logical lines of code
* Class has 552 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldType\LanguageItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldType\DecimalItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldType\BooleanItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldFormatter\TimestampFormatter">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldFormatter\BooleanFormatter">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\Plugin\Field\FieldFormatter\TimestampAgoFormatter">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Field\FieldItemBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (27, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=19)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Field\FieldDefinition">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (24, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Field\BaseFieldDefinition">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (60, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 38)
* Component uses 156 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.18 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 371 logical lines of code
* Class has 840 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Field\WidgetPluginManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Image\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.2) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\ImageToolkit (0.792)</violation>
  </file>
  <file name="Drupal\Core\Controller\ControllerResolver">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Url">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (25, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 46)
* Component uses 150 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.17 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 302 logical lines of code
* Class has 847 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Action\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.516) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Executable (0.545)</violation>
  </file>
  <file name="Drupal\Core\Action\Plugin\Action\EmailAction">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Action\Plugin\Action\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.714) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Mail (0.792)</violation>
  </file>
  <file name="Drupal\Core\Messenger\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.108) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Render (0.198)
* Drupal\Core\PageCache\ResponsePolicy (0.8)</violation>
  </file>
  <file name="Drupal\Core\TempStore\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\Theme\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.511) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Utility (0.571)
* Drupal\Core\Template (0.833)</violation>
  </file>
  <file name="Drupal\Core\Theme\ThemeInitialization">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 45)
* Component uses 99 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.76 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Theme\Registry">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 89)
* Component uses 194 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 36)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 328 logical lines of code
* Class has 755 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Theme\ThemeManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 62)
* Component uses 139 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 50)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.09 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 245 logical lines of code
* Class has 414 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Menu\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.623) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Template (0.833)</violation>
  </file>
  <file name="Drupal\Core\Menu\Form\MenuLinkDefaultForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Menu\MenuTreeStorage">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 123)
* Component uses 351 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 685 logical lines of code
* Class has 1163 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Menu\MenuParentFormSelector">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Menu\MenuLinkTree">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Menu\LocalTaskManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 21)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\Menu\MenuLinkManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 209 logical lines of code
* Class has 391 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\FileTransfer\Form\FileTransferAuthorizeForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.81 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\FileTransfer\FileTransfer">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\FileTransfer\SSH">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Queue\DatabaseQueue">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Site\Settings">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\Core\Site\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.13) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Database (0.157)
* Drupal\Core\Routing (0.253)</violation>
  </file>
  <file name="Drupal\Core\Display\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Core\StringTranslation\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.071) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\StringTranslation\Translator (0.667)</violation>
  </file>
  <file name="Drupal\Core\Command\DbDumpCommand">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Command\InstallCommand">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.81 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Command\ServerCommand">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Routing\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.253) than 8 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Path (0.51)
* Drupal\Core\PathProcessor (0.263)
* Drupal\Core\Http\Exception (0.613)
* Drupal\Core\Utility (0.571)
* Drupal\Core\RouteProcessor (0.429)
* Drupal\Core\Controller (0.265)
* Drupal\Core\Discovery (0.429)
* Drupal\Component\HttpFoundation (0.8)</violation>
  </file>
  <file name="Drupal\Core\Routing\RouteProvider">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.9 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Routing\RequestFormatRouteFilter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Routing\UrlGenerator">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 53)
* Component uses 167 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 37)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.3 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 203 logical lines of code
* Class has 404 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Routing\MatcherDumper">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Routing\Router">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\DrupalKernel">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (20, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 146)
* Component uses 396 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 21)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 717 logical lines of code
* Class has 1410 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 37, so this class uses 37 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\Core\EventSubscriber\ActiveLinkResponseFilter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 25)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\EventSubscriber\FinishResponseSubscriber">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\EventSubscriber\ConfigImportSubscriber">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 47)
* Component uses 78 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Installer\Form\SiteConfigureForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.03 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Installer\Form\SiteSettingsForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.78 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Installer\Form\SelectProfileForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\DependencyInjection\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.171) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\DependencyInjection (0.9)
* Drupal\Component\FileCache (0.308)
* Drupal\Core\Serialization (0.214)</violation>
  </file>
  <file name="Drupal\Core\DependencyInjection\YamlFileLoader">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 72)
* Component uses 110 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 49)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.11 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 240 logical lines of code
* Class has 328 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\DependencyInjection\Compiler\TaggedHandlersPass">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\DependencyInjection\Compiler\RegisterEventSubscribersPass">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\StreamWrapper\LocalStream">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 27)
* Component uses 107 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 221 logical lines of code
* Class has 561 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Core\Validation\Plugin\Validation\Constraint\PrimitiveTypeConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 29)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Validation\Plugin\Validation\Constraint\AllowedValuesConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Ajax\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.293) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Asset (0.771)</violation>
  </file>
  <file name="Drupal\Core\Ajax\AjaxResponseAttachmentsProcessor">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Block\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.426) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Plugin\Context (0.432)</violation>
  </file>
  <file name="Drupal\Core\Block\BlockBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Utility\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.571) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Template (0.833)</violation>
  </file>
  <file name="Drupal\Core\Utility\LinkGenerator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Utility\Token">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Utility\UnroutedUrlAssembler">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Utility\ProjectInfo">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Core\Utility\Error">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Core\Session\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.066) than 5 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core (0.225)
* Drupal\Core\Cache (0.071)
* Drupal\Core\Site (0.13)
* Drupal\Core\Database (0.157)
* Drupal\Core\Utility (0.571)</violation>
  </file>
  <file name="Drupal\Core\Session\SessionManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Transliteration\PhpTransliteration">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Datetime\DateTimePlus">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 55)
* Component uses 130 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 254 logical lines of code
* Class has 663 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 64)
* Component uses 79 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Serialization\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.192) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Serialization\Exception (0.2)</violation>
  </file>
  <file name="Drupal\Component\Serialization\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Graph\Graph">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Component\Graph\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Plugin\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.099) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Plugin\Context (0.231)
* Drupal\Component\Plugin\Discovery (0.154)
* Drupal\Component\Plugin\Factory (0.333)</violation>
  </file>
  <file name="Drupal\Component\Plugin\Discovery\DerivativeDiscoveryDecorator">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Plugin\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Annotation\Reflection\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Diff\DiffFormatter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Diff\Engine\DifferenceEngine\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Diff\Engine\DiffEngine">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 109)
* Component uses 322 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 39)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.98 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 284 logical lines of code
* Class has 409 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\FileSystem\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Assertion\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Assertion\Inspector">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (17, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=17)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 38)
* Component uses 66 operators

Maybe you should delegate some code to other objects.</violation>
  </file>
  <file name="Drupal\Component\FileCache\FileCache">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Component\Version\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Gettext\PoHeader">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 72)
* Component uses 266 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 26)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.96 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 298 logical lines of code
* Class has 521 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\Gettext\PoItem">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Gettext\PoStreamReader">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 58)
* Component uses 196 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 45)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.22 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 279 logical lines of code
* Class has 506 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\ProxyBuilder\ProxyBuilder">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.75 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Scaffold\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.75) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Scaffold\Operations (0.786)</violation>
  </file>
  <file name="Drupal\Component\Uuid\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\DependencyInjection\Container">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 86)
* Component uses 159 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 35)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 299 logical lines of code
* Class has 514 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\DependencyInjection\PhpArrayContainer">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 53)
* Component uses 93 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 32)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\DependencyInjection\Dumper\OptimizedPhpArrayDumper">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 51)
* Component uses 132 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.99 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 242 logical lines of code
* Class has 441 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\HttpFoundation\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\Component\Utility\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.031) than 4 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Render (0.066)
* Drupal\Core\DependencyInjection (0.171)
* Drupal\Core (0.225)
* Drupal\Core\Messenger (0.108)</violation>
  </file>
  <file name="Drupal\Component\Utility\Variable">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Component\Utility\Unicode">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 220 logical lines of code
* Class has 598 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\Component\Utility\ArgumentsResolver">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\Component\Utility\Random">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.69 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Utility\Html">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=13)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.69 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Utility\UrlHelper">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.66 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Utility\Xss">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.15 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\Component\Utility\UserAgent">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (51, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=51)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 6)
* Component uses 61 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 221 logical lines of code
* Class has 767 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\demo_umami_content\InstallHelper">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 55)
* Component uses 204 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 331 logical lines of code
* Class has 651 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate_drupal\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.471) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate\Plugin\Exception (0.6)</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\source\ContentEntity">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\source\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.228) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate\Plugin\migrate\source (0.818)
* Drupal\migrate\Plugin (0.281)
* Drupal\migrate\Exception (0.417)</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\EntityReferenceTranslationDeriver">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\field\FieldPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\field\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.2) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate_drupal\Plugin (0.471)
* Drupal\migrate\Plugin (0.281)</violation>
  </file>
  <file name="Drupal\migrate_drupal\Plugin\migrate\cckfield\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.333) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate_drupal\Plugin (0.471)</violation>
  </file>
  <file name="Drupal\migrate_drupal\FieldDiscovery">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal\MigrationState">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.66 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\statistics\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\statistics\Plugin\Block\StatisticsPopularBlock">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\config_translation\ConfigEntityMapper">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\config_translation\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.733) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\locale (0.872)
* Drupal\config_translation\Event (0.75)</violation>
  </file>
  <file name="Drupal\config_translation\Form\ConfigTranslationFormBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\config_translation\Form\ConfigTranslationDeleteForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\config_translation\ConfigNamesMapper">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (35, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 210 logical lines of code
* Class has 420 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 21, so this class uses 21 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\config_translation\Controller\ConfigTranslationFieldListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\config_translation\Controller\ConfigTranslationController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\options\Plugin\Field\FieldType\ListItemBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.6 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\shortcut\Form\SwitchShortcutSet">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\shortcut\Entity\Shortcut">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\shortcut\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\shortcut\ShortcutSetStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\contact\MessageForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\contact\ContactFormEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\contact\Entity\Message">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\layout_builder\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.528) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\layout_builder\SectionStorage (0.609)
* Drupal\layout_builder\Plugin\Block (0.964)
* Drupal\Core\Entity\Entity (0.543)</violation>
  </file>
  <file name="Drupal\layout_builder\Form\LayoutBuilderEntityViewDisplayForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\MoveBlockForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\OverridesEntityForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\ConfigureBlockFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\DefaultsEntityForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\LayoutBuilderDisableForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\layout_builder\Form\RevertOverridesForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\layout_builder\Context\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\layout_builder\InlineBlockEntityOperations">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Entity\LayoutBuilderEntityViewDisplay">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 57)
* Component uses 153 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.31 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 296 logical lines of code
* Class has 501 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\layout_builder\Plugin\SectionStorage\DefaultsSectionStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (25, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 34)
* Component uses 114 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 221 logical lines of code
* Class has 379 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\layout_builder\Plugin\SectionStorage\OverridesSectionStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (18, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 23, so this class uses 23 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\layout_builder\Plugin\SectionStorage\SectionStorageBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\layout_builder\Plugin\Block\InlineBlock">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Plugin\Block\FieldBlock">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 21, so this class uses 21 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\layout_builder\Element\LayoutBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.23 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Section">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\Controller\ChooseBlockController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.73 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\QuickEditIntegration">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.6 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\layout_builder\EventSubscriber\BlockComponentRenderArray">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\layout_builder\Event\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.5) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\layout_builder (0.528)</violation>
  </file>
  <file name="Drupal\locale\Form\TranslateFormBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\Form\TranslateEditForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.99 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\Form\TranslationStatusForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.8 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\Form\ExportForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\Form\ImportForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\LocaleConfigManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 51)
* Component uses 128 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.04 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 259 logical lines of code
* Class has 609 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\locale\LocaleLookup">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\locale\PoDatabaseWriter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\locale\StringDatabaseStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 54)
* Component uses 119 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.2 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 274 logical lines of code
* Class has 479 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\menu_ui\Form\MenuLinkResetForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\menu_ui\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\menu_ui\Plugin\Validation\Constraint\MenuSettingsConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\menu_ui\MenuForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 212 logical lines of code
* Class has 347 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\content_moderation\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.696) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\workflows (0.703)
* Drupal\content_moderation\Entity (0.9)</violation>
  </file>
  <file name="Drupal\content_moderation\Form\ContentModerationConfigureForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\Form\ContentModerationConfigureEntityTypesForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\EntityOperations">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\Plugin\WorkflowType\ContentModeration">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\Plugin\Field\FieldWidget\ModerationStateWidget">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\Plugin\views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\content_moderation\Plugin\views\filter\ModerationStateFilter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\ModerationInformation">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (17, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 37)
* Component uses 88 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_moderation\EntityTypeInfo">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\help_topics\HelpTopicDiscovery">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\migrate_drupal_ui\Form\CredentialForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.26 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal_ui\Form\IdConflictForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal_ui\Form\ReviewForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate_drupal_ui\Batch\MigrateUpgradeImportBatch">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\update\Form\UpdateManagerInstall">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.66 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\update\Form\UpdateManagerUpdate">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 33)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\update\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\update\UpdateManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\update\UpdateProcessor">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\Context\FieldResolver">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 60)
* Component uses 191 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 30)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.68 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 302 logical lines of code
* Class has 718 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\jsonapi\ResourceType\ResourceTypeRepository">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.71 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\IncludeResolver">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.75) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\jsonapi\Access (0.933)
* Drupal\jsonapi\Context (0.824)
* Drupal\jsonapi\DependencyInjection\Compiler (0.75)</violation>
  </file>
  <file name="Drupal\jsonapi\Access\TemporaryQueryGuard">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 60)
* Component uses 124 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.29 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 249 logical lines of code
* Class has 542 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\jsonapi\Access\EntityAccessChecker">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\Entity\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\jsonapi\ParamConverter\EntityUuidConverter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\jsonapi\JsonApiResource\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.606) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\jsonapi\Routing (0.762)
* Drupal\Core\Field\Plugin\Field\FieldType (0.615)</violation>
  </file>
  <file name="Drupal\jsonapi\JsonApiResource\ResourceObject">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\JsonApiResource\LinkCollection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\jsonapi\JsonApiResource\ResourceIdentifier">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\Controller\EntityResource">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 97)
* Component uses 286 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.33 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 520 logical lines of code
* Class has 1152 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 47, so this class uses 47 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\jsonapi\Controller\FileUpload">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 23, so this class uses 23 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\jsonapi\Controller\TemporaryJsonapiFileFieldUploader">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.75 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 23, so this class uses 23 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\jsonapi\Revisions\ResourceVersionRouteEnhancer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\jsonapi\Routing\Routes">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.04 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 207 logical lines of code
* Class has 412 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\jsonapi\Normalizer\Value\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\jsonapi\Normalizer\HttpExceptionNormalizer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\Normalizer\JsonApiDocumentTopLevelNormalizer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.98 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\jsonapi\Query\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.8) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\jsonapi\Context (0.824)</violation>
  </file>
  <file name="Drupal\jsonapi\DependencyInjection\Compiler\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.75) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\serialization (0.857)</violation>
  </file>
  <file name="Drupal\datetime_range\Plugin\Field\FieldWidget\DateRangeDatelistWidget">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\datetime_range\Plugin\Field\FieldType\DateRangeFieldItemList">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\datetime_range\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\file\Entity\File">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (20, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.5) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\file (0.69)</violation>
  </file>
  <file name="Drupal\file\FileAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\file\Tests\FileManagedTestBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\file\Tests\FileFieldTestBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.78 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\Plugin\Field\FieldWidget\FileWidget">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 54)
* Component uses 191 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 305 logical lines of code
* Class has 462 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\file\Plugin\Field\FieldType\FileFieldItemList">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\file\Plugin\Field\FieldType\FileItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\Plugin\Field\FieldFormatter\FileMediaFormatterBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\Plugin\rest\resource\FileUploadResource">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 202 logical lines of code
* Class has 485 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 28, so this class uses 28 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\file\Element\ManagedFile">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 57)
* Component uses 145 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 26)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.64 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 203 logical lines of code
* Class has 334 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\file\FileViewsData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.33 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\file\FileUsage\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\config\Form\ConfigSingleImportForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 21, so this class uses 21 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\config\Form\ConfigSingleExportForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\config\Form\ConfigSync">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.98 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\config\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\hal\Normalizer\ContentEntityNormalizer">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\datetime\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\datetime\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\datetime\Plugin\Field\FieldWidget\DateTimeDatelistWidget">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\datetime\Plugin\Field\FieldFormatter\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.8) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Field\Plugin\Field\FieldFormatter (0.828)</violation>
  </file>
  <file name="Drupal\datetime\Plugin\Field\FieldFormatter\DateTimeFormatterBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\quickedit\Form\QuickEditFieldForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\quickedit\QuickEditController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\comment\CommentTypeForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Form\CommentAdminOverview">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.789) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\comment (0.889)</violation>
  </file>
  <file name="Drupal\comment\Entity\Comment">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (34, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=10)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 25)
* Component uses 113 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 269 logical lines of code
* Class has 473 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\comment\Tests\CommentTestTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\comment\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\comment\Tests\CommentTestBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\comment\Plugin\Field\FieldType\CommentItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Plugin\Field\FieldFormatter\CommentDefaultFormatter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.74 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Plugin\views\wizard\Comment">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Plugin\views\field\NodeNewComments">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Plugin\Validation\Constraint\CommentNameConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\comment\CommentForm">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 49)
* Component uses 123 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 26)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentViewsData">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\Controller\CommentController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentStorage">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.81 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentLinkBuilder">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 29)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.72 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentViewBuilder">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentLazyBuilders">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\comment\CommentStatistics">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\serialization\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\serialization\Normalizer\FieldableEntityNormalizerTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\serialization\EventSubscriber\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.9) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\EventSubscriber (0.989)</violation>
  </file>
  <file name="Drupal\serialization\RegisterSerializationClassesCompilerPass">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\path\Form\PathFormBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\path\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views_ui\Form\BasicSettingsForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Form\BreakLockForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\ViewsFormBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\RearrangeFilter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\Rearrange">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.7 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\Display">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\AddHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.81 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\ConfigHandler">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Form\Ajax\ReorderDisplays">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.68 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\ViewFormBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\ViewAddForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views_ui\ViewListBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\Controller\ViewsUIController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views_ui\ViewEditForm">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 108)
* Component uses 374 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 38)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 6.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 556 logical lines of code
* Class has 791 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views_ui\ViewUI">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (86, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 84)
* Component uses 291 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 31)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 678 logical lines of code
* Class has 1167 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\aggregator\Form\SettingsForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\Form\OpmlFeedAdd">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\Entity\Feed">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (28, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.71 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\Entity\Item">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\aggregator\Tests\AggregatorTestBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (17, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=10)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.88 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\aggregator\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.706) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\aggregator (0.721)</violation>
  </file>
  <file name="Drupal\aggregator\Plugin\aggregator\processor\DefaultProcessor">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\Controller\AggregatorController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\FeedViewBuilder">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\aggregator\ItemsImporter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\workflows\Form\WorkflowTransitionEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workflows\Form\WorkflowTransitionAddForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workflows\Form\WorkflowStateEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workflows\Form\WorkflowEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.95 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workflows\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.692) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\workflows (0.703)</violation>
  </file>
  <file name="Drupal\workflows\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\workflows\Plugin\WorkflowTypeBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (28, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 35)
* Component uses 102 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 281 logical lines of code
* Class has 428 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\tracker\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\language\HttpKernel\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.917) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\language\EventSubscriber (0.929)</violation>
  </file>
  <file name="Drupal\language\Form\NegotiationUrlForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\Form\LanguageAddForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\Form\ContentLanguageSettingsForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\Form\NegotiationConfigureForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.97 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\Form\NegotiationBrowserForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.651) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\language\Config (0.739)</violation>
  </file>
  <file name="Drupal\language\Entity\ConfigurableLanguage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\language\Entity\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.48) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\language (0.651)
* Drupal\language\Exception (0.5)</violation>
  </file>
  <file name="Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationUrl">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationContentEntity">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\language\LanguageListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\language\ConfigurableLanguageManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 35)
* Component uses 113 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 251 logical lines of code
* Class has 432 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\language\LanguageNegotiator">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\UserListBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.621) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\content_translation (0.711)</violation>
  </file>
  <file name="Drupal\user\Form\UserLoginForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Form\UserPermissionsForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Form\UserCancelForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Form\UserMultipleCancelConfirm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\AccountSettingsForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.21 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\UserData">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\user\RegisterForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\UserViewsData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.23 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.519) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Entity\Routing (0.6)
* Drupal\user (0.621)</violation>
  </file>
  <file name="Drupal\user\Entity\User">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (39, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 29)
* Component uses 112 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.05 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 270 logical lines of code
* Class has 476 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\user\PermissionHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\user\Plugin\EntityReferenceSelection\UserSelection">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.61 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Plugin\migrate\source\d7\User">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Plugin\views\access\Role">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\user\Plugin\views\access\Permission">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\user\Plugin\views\filter\Name">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\user\Controller\UserController">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\Controller\UserAuthenticationController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.81 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\user\UserAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\user\AccountForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 30)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.22 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\ckeditor\CKEditorPluginManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\ckeditor\Plugin\CKEditorPlugin\Internal">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 37)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 233 logical lines of code
* Class has 395 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\ckeditor\Plugin\Editor\CKEditor">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.04 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block_content\Entity\BlockContent">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (21, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\block_content\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.8) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\block_content (0.85)</violation>
  </file>
  <file name="Drupal\block_content\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\block_content\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\block_content\Event\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.6) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\block_content (0.85)</violation>
  </file>
  <file name="Drupal\workspaces\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.776) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Plugin\views\query (0.833)</violation>
  </file>
  <file name="Drupal\workspaces\Form\WorkspaceDeployForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workspaces\Form\WorkspaceActivateForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\workspaces\ViewsQueryAlter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.08 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workspaces\EntityOperations">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workspaces\WorkspaceManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\workspaces\WorkspaceListBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.71 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field\Entity\FieldConfig">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=10)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field\Entity\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.407) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\field (0.909)</violation>
  </file>
  <file name="Drupal\field\Entity\FieldStorageConfig">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (34, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=15)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 37)
* Component uses 146 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 346 logical lines of code
* Class has 778 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\field\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\field\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\field\Plugin\migrate\source\d7\FieldInstance">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field\Plugin\migrate\source\d6\FieldInstancePerViewMode">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field\Plugin\migrate\field\d7\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\field\Plugin\migrate\process\d6\FieldInstanceDefaults">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\field\Plugin\migrate\process\d6\FieldSettings">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\field\FieldConfigStorage">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\field\FieldStorageConfigStorage">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\field\ConfigImporterFieldPurger">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\image\Form\ImageStyleEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.83 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\image\Entity\ImageStyle">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (18, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 44)
* Component uses 122 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.88 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 255 logical lines of code
* Class has 517 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\image\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\image\Plugin\Field\FieldWidget\ImageWidget">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.23 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\image\Plugin\Field\FieldType\ImageItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.75 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\image\Plugin\Field\FieldFormatter\ImageFormatter">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.62 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\image\Plugin\Field\FieldFormatter\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.895) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\file\Plugin\Field\FieldFormatter (0.941)</violation>
  </file>
  <file name="Drupal\image\Plugin\migrate\field\d6\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.5) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\file\Plugin\migrate\field\d6 (0.667)</violation>
  </file>
  <file name="Drupal\image\Controller\ImageStyleDownloadController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\image\Controller\QuickEditImageController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\big_pipe\Render\BigPipe">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.3 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 246 logical lines of code
* Class has 688 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\search\Form\SearchPageFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\search\Entity\SearchPage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\search\SearchPageListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.33 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\search\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\search\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\search\Plugin\SearchPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\search\Plugin\views\filter\Search">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\search\Controller\SearchController">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\search\SearchQuery">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 49)
* Component uses 150 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 25)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.22 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 248 logical lines of code
* Class has 564 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\breakpoint\BreakpointManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\menu_link_content\Entity\MenuLinkContent">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (18, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.83 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\menu_link_content\Plugin\Menu\MenuLinkContent">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\forum\Form\ForumForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\forum\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.882) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\comment (0.889)</violation>
  </file>
  <file name="Drupal\forum\ForumManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 247 logical lines of code
* Class has 418 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\forum\Controller\ForumController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.7 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\SiteInformationForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\ThemeSettingsForm">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 57)
* Component uses 164 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 33)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.73 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 252 logical lines of code
* Class has 386 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\system\Form\RegionalForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\ModulesUninstallForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\ModulesUninstallConfirmForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\system\Form\PrepareModulesEntityUninstallForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.64 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\ModulesListConfirmForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\system\Form\PerformanceForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Form\ModulesListForm">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 54)
* Component uses 132 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 28)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.87 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 209 logical lines of code
* Class has 347 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\system\Tests\Cache\AssertPageCacheContextsAndTagsTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Tests\Cache\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Cache\GenericCacheBackendUnitTestBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 375 logical lines of code
* Class has 532 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\system\Tests\Update\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Update\UpdatePathTestBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Tests\Entity\EntityDefinitionTestTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Tests\Entity\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Entity\EntityCacheTagsTestBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.27 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 321 logical lines of code
* Class has 556 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\system\Tests\Entity\EntityWithUriCacheTagsTestBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Tests\Module\ModuleTestBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Tests\Module\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Image\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\System\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Menu\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Installer\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Ajax\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Tests\Utility\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\system\Plugin\ImageToolkit\GDToolkit">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 41)
* Component uses 115 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.82 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 218 logical lines of code
* Class has 408 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\system\Plugin\Condition\CurrentThemeCondition">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\system\Plugin\Condition\RequestPath">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\system\Plugin\Block\SystemBrandingBlock">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Plugin\Block\SystemMenuBlock">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.54 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Element\StatusReportPage">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Controller\SystemController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 29)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.01 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\system\Controller\DbUpdateController">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 54)
* Component uses 208 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 306 logical lines of code
* Class has 521 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.09) than 4 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate\Plugin (0.281)
* Drupal\migrate\Event (0.5)
* Drupal\Core\Utility (0.571)
* Drupal\Core\Plugin (0.117)</violation>
  </file>
  <file name="Drupal\migrate\MigrateExecutable">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 46)
* Component uses 134 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.04 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 285 logical lines of code
* Class has 461 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\Plugin\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.281) than 5 package(s) that it depends on.
The packages that are more stable are

* Drupal\Component\Plugin\Factory (0.333)
* Drupal\Core\Plugin\Factory (0.333)
* Drupal\migrate\Plugin\Discovery (0.867)
* Drupal\migrate\Event (0.5)
* Drupal\migrate\Exception (0.417)</violation>
  </file>
  <file name="Drupal\migrate\Plugin\MigrationPluginManager">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.56 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\source\SourcePluginBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 43)
* Component uses 97 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.6 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 215 logical lines of code
* Class has 553 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\source\SqlBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 48)
* Component uses 132 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.95 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 210 logical lines of code
* Class has 405 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\destination\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.583) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\migrate\Audit (0.727)</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\destination\EntityConfigBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\destination\Config">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\destination\EntityContentBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.64 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\id_map\Sql">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 71)
* Component uses 207 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 489 logical lines of code
* Class has 830 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\process\MigrationLookup">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\migrate\process\FormatDate">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\migrate\Plugin\Migration">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (21, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 37)
* Component uses 105 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.89 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 289 logical lines of code
* Class has 639 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\migrate\Exception\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\link\Plugin\Field\FieldWidget\LinkWidget">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 48)
* Component uses 139 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\link\Plugin\Field\FieldType\LinkItem">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\link\Plugin\Field\FieldFormatter\LinkFormatter">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.64 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\link\Plugin\migrate\process\FieldLink">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\TermViewsData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Form\OverviewTerms">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 84)
* Component uses 231 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 64)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 301 logical lines of code
* Class has 447 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\taxonomy\Entity\Term">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.643) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\taxonomy (0.732)</violation>
  </file>
  <file name="Drupal\taxonomy\VocabularyListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\TermStorage">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 43)
* Component uses 135 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 262 logical lines of code
* Class has 413 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\taxonomy\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\EntityReferenceSelection\TermSelection">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\migrate\source\d7\Term">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\argument_default\Tid">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\argument\IndexTidDepth">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.49 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\argument\IndexTidDepthModifier">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\field\TaxonomyIndexTid">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\relationship\NodeTermData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\Plugin\views\filter\TaxonomyIndexTid">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 58)
* Component uses 144 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 28)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 233 logical lines of code
* Class has 299 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\taxonomy\VocabularyForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\taxonomy\TermForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\book\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.72) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Template (0.833)</violation>
  </file>
  <file name="Drupal\book\Form\BookRemoveForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\book\Form\BookAdminEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.12 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\book\BookManager">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 122)
* Component uses 406 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 4.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 558 logical lines of code
* Class has 999 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\book\Plugin\Block\BookNavigationBlock">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\book\BookOutlineStorage">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Form\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.909) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\field (0.909)</violation>
  </file>
  <file name="Drupal\field_ui\Form\FieldConfigEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Form\EntityViewDisplayEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Form\FieldStorageAddForm">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 47)
* Component uses 130 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 257 logical lines of code
* Class has 451 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\field_ui\Form\FieldStorageConfigEditForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.75 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Form\EntityDisplayFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 67)
* Component uses 195 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.28 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 355 logical lines of code
* Class has 673 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\field_ui\Plugin\Derivative\FieldUiLocalTask">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.69 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Element\FieldUiTable">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.77 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\FieldConfigListBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_ui\Routing\RouteSubscriber">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\tour\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\field_layout\Form\FieldLayoutEntityDisplayFormTrait">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\field_layout\Display\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.333) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Layout (0.722)</violation>
  </file>
  <file name="Drupal\media_library\Form\FileUploadForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 21, so this class uses 21 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\media_library\Form\AddFormBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 26)
* Component uses 115 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.87 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 286 logical lines of code
* Class has 651 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\media_library\Plugin\Field\FieldWidget\MediaLibraryWidget">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=15)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 58)
* Component uses 217 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.96 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 372 logical lines of code
* Class has 664 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 25, so this class uses 25 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\media_library\MediaLibraryUiBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media_library\MediaLibraryFieldWidgetOpener">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\media_library\MediaLibraryState">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\dblog\Controller\DbLogController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.08 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\page_cache\StackMiddleware\PageCache">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\text\Plugin\migrate\field\d7\TextField">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\filter\FilterFormatListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\filter\Entity\FilterFormat">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 49)
* Component uses 95 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 33)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\filter\Plugin\Filter\FilterHtml">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.31 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 236 logical lines of code
* Class has 382 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\filter\Element\ProcessedText">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\filter\Element\TextFormat">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.66 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\filter\FilterFormatFormBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\filter\Render\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\responsive_image\ResponsiveImageStyleForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\responsive_image\Entity\ResponsiveImageStyle">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\responsive_image\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.778) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\responsive_image (0.917)
* Drupal\image\Entity (0.87)</violation>
  </file>
  <file name="Drupal\responsive_image\Plugin\Field\FieldFormatter\ResponsiveImageFormatter">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\responsive_image\Tests\ResponsiveImageFieldUiTest">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.658) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\node\Entity (0.682)
* Drupal\content_translation (0.711)</violation>
  </file>
  <file name="Drupal\node\NodeAccessControlHandler">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Form\NodeRevisionRevertForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\node\Form\NodeRevisionDeleteForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\node\NodeGrantDatabaseStorage">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.73 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Access\NodeRevisionAccessCheck">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\node\Entity\Node">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=11)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\node\Tests\Views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\node\Plugin\Search\NodeSearch">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (17, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 70)
* Component uses 202 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.97 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 353 logical lines of code
* Class has 629 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 22, so this class uses 22 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\node\Plugin\Action\AssignOwnerNode">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\node\Plugin\migrate\source\d7\NodeType">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Plugin\migrate\source\d7\Node">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Plugin\migrate\source\d6\NodeType">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Plugin\migrate\source\d6\Node">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.82 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Plugin\views\wizard\Node">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Plugin\views\wizard\NodeRevision">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.68 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\NodeTypeForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.88 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\Controller\NodeController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 19)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.91 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\NodeForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.98 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\NodeViewsData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.96 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\node\NodeStorageSchema">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\ban\Form\BanDelete">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views\Form\ViewsFormMainForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.5 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Form\ViewsExposedForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.47 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\ManyToOneHelper">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 43)
* Component uses 143 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.07 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 201 logical lines of code
* Class has 263 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.199) than 6 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Plugin\views (0.51)
* Drupal\Core\Config (0.212)
* Drupal\Core\Entity\Sql (0.615)
* Drupal\Core\Field (0.213)
* Drupal\Core\Config\Entity (0.253)
* Drupal\Core\Routing (0.253)</violation>
  </file>
  <file name="Drupal\views\ViewsData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Views">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (18, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=19)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 44)
* Component uses 103 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.16 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 205 logical lines of code
* Class has 410 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Entity\Render\EntityFieldRenderer">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Entity\View">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (19, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 46)
* Component uses 115 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.12 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 267 logical lines of code
* Class has 504 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Tests\ViewTestData">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.74 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Tests\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.522) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\simpletest (0.533)</violation>
  </file>
  <file name="Drupal\views\Tests\Handler\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.5) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Tests (0.522)</violation>
  </file>
  <file name="Drupal\views\Tests\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views\Tests\Wizard\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views\Tests\ViewResultAssertionTrait">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\views\Plugin\ViewsHandlerManager">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\views\Plugin\EntityReferenceSelection\ViewsSelection">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\exposed_form\ExposedFormPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=8)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 48)
* Component uses 99 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 17)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.1 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\cache\Time">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\cache\CachePluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\join\FieldOrLanguageJoin">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\join\Subquery">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\join\JoinPluginBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\sort\SortPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\area\Result">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\area\DisplayLink">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.63 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\area\Entity">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument\ManyToOne">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.463) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Plugin\views (0.51)</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument\NumericArgument">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument\StringArgument">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.14 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument\ArgumentPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (39, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 121)
* Component uses 377 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 4.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 679 logical lines of code
* Class has 1039 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\argument_validator\Entity">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\wizard\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.519) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Entity (0.727)
* Drupal\views_ui (0.925)</violation>
  </file>
  <file name="Drupal\views\Plugin\views\wizard\WizardPluginBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 88)
* Component uses 278 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 4.66 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 476 logical lines of code
* Class has 972 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\style\Grid">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\style\StylePluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (23, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 74)
* Component uses 193 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.95 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 362 logical lines of code
* Class has 713 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\style\Table">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.535) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Entity\Render (0.938)</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\Boolean">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\EntityField">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (23, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 107)
* Component uses 330 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 3.71 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 495 logical lines of code
* Class has 817 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 27, so this class uses 27 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\LinkBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\FieldPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (30, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 184)
* Component uses 604 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 45)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 8.15 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 777 logical lines of code
* Class has 1183 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\EntityOperations">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\RenderedEntity">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\Date">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.69 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\NumericField">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.76 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\field\BulkForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 26)
* Component uses 99 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.08 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 227 logical lines of code
* Class has 442 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\PluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (23, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=14)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 57)
* Component uses 141 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.33 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 297 logical lines of code
* Class has 591 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\row\RssFields">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.76 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\row\EntityRow">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\row\OpmlFields">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.78 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\relationship\GroupwiseMax">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.26 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\relationship\RelationshipPluginBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\Feed">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.87 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.398) than 4 package(s) that it depends on.
The packages that are more stable are

* Drupal\views\Plugin\views (0.51)
* Drupal\views\Form (0.947)
* Drupal\Core\Block (0.426)
* Drupal\views\Plugin\Block (0.938)</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\DisplayPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (69, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=12)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 360)
* Component uses 741 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 59)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 11.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 1447 logical lines of code
* Class has 1951 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\DisplayPluginInterface">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 1)
* Component uses  operators

Maybe you should delegate some code to other objects.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\Block">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\EntityReference">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\Page">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 36)
* Component uses 119 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.96 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\PathPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (17, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 43)
* Component uses 181 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.84 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 291 logical lines of code
* Class has 471 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\display\Attachment">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.9 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\HandlerBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (51, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=31)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 62)
* Component uses 195 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.97 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 449 logical lines of code
* Class has 772 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\BooleanOperator">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.7 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\NumericFilter">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 64)
* Component uses 136 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 35)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.94 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 227 logical lines of code
* Class has 280 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\Date">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.7 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\FilterPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (33, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 183)
* Component uses 459 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 6.92 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 755 logical lines of code
* Class has 1144 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\Combine">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.79 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\StringFilter">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 33)
* Component uses 97 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.53 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\filter\InOperator">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 77)
* Component uses 169 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 24)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.55 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 290 logical lines of code
* Class has 372 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\Plugin\views\query\QueryPluginBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (22, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=18)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\query\Sql">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (37, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 208)
* Component uses 468 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 39)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 796 logical lines of code
* Class has 1457 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 22, so this class uses 22 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\views\Plugin\views\pager\SqlBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 42)
* Component uses 126 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.51 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Plugin\Block\ViewsBlockBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.41 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\Render\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\views\Controller\ViewAjaxController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\views\EntityViewsData">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 73)
* Component uses 190 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 31)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.37 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 298 logical lines of code
* Class has 512 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\EventSubscriber\ViewsEntitySchemaSubscriber">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 68)
* Component uses 97 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 38)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.89 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 218 logical lines of code
* Class has 365 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\ViewExecutable">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (69, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 212)
* Component uses 494 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 4.59 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 1083 logical lines of code
* Class has 2242 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\views\ViewsDataHelper">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 31)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_translation\ContentTranslationHandler">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 96)
* Component uses 210 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 48)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.68 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 353 logical lines of code
* Class has 607 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\content_translation\Access\ContentTranslationManageAccessCheck">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\content_translation\FieldTranslationSynchronizer">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 53)
* Component uses 109 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_translation\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\content_translation\Tests\ContentTranslationUITestBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 37)
* Component uses 145 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.52 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 350 logical lines of code
* Class has 521 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\content_translation\Plugin\migrate\source\d7\EntityTranslationSettings">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 34)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.58 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_translation\Plugin\migrate\source\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\content_translation\Plugin\Validation\Constraint\ContentTranslationSynchronizedFieldsConstraintValidator">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\content_translation\Controller\ContentTranslationController">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 35)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\content_translation\Routing\ContentTranslationRouteSubscriber">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\rest\Entity\RestResourceConfig">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (11, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\rest\Entity\ConfigDependencies">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\rest\Tests\RESTTestBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 74)
* Component uses 148 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 20)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.57 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 288 logical lines of code
* Class has 498 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\rest\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\rest\Plugin\ResourceBase">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.42 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\rest\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\rest\Plugin\views\style\Serializer">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (10, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\rest\Plugin\views\row\DataFieldRow">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\rest\Plugin\views\display\RestExport">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (16, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=9)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.96 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\rest\Plugin\rest\resource\EntityResource">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 39)
* Component uses 92 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.9 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 204 logical lines of code
* Class has 398 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\rest\Plugin\rest\resource\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\rest\LinkManager\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\rest\Routing\ResourceRoutes">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\rest\RequestHandler">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\editor\Element">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\editor\Form\EditorImageDialog">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.77 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\editor\Entity\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.182) than 2 package(s) that it depends on.
The packages that are more stable are

* Drupal\Core\Config\Entity (0.253)
* Drupal\editor (0.889)</violation>
  </file>
  <file name="Drupal\editor\Plugin\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\block\BlockListBuilder">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.19 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block\BlockForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block\Entity\Block">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (12, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\block\Entity\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.833) than 1 package(s) that it depends on.
The packages that are more stable are

* Drupal\block (0.857)</violation>
  </file>
  <file name="Drupal\block\Tests\">
    <violation beginline="1" rule="Stable Abstractions Principle" ruleset="Stable Abstractions Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should be either abstract and stable or concrete and instable.

This package is instable and abstract.</violation>
  </file>
  <file name="Drupal\block\Plugin\DisplayVariant\BlockPageVariant">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\block\Plugin\migrate\source\Block">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.48 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block\BlockViewBuilder">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.38 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block\Controller\BlockLibraryController">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.45 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\block\BlockAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 14)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\media\OEmbed\Resource">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.4 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\OEmbed\ResourceFetcher">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.44 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\Form\MediaDeleteMultipleConfirmForm">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (8, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=3)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 13)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.43 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\MediaSourceBase">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (14, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=4)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.72 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\Access\MediaRevisionAccessCheck">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\media\Entity\Media">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (15, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 34)
* Component uses 89 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.85 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\Plugin\Field\FieldFormatter\OEmbedFormatter">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.65 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\Plugin\CKEditorPlugin\DrupalMedia">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=7)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
  </file>
  <file name="Drupal\media\Plugin\Filter\MediaEmbed">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 12)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.83 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 20, so this class uses 20 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\media\Plugin\views\wizard\MediaRevision">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.46 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\Plugin\media\Source\OEmbed">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (13, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=5)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 23)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.02 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too dependent" ruleset="Too dependent" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks use really high number of components.

* Efferent coupling is 25, so this class uses 25 different external components.

Maybe you should check why this class has lot of dependencies.</violation>
  </file>
  <file name="Drupal\media\MediaTypeForm">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 15)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.29 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\media\MediaAccessControlHandler">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 22)

Maybe you should delegate some code to other objects or split complex method.</violation>
  </file>
  <file name="Drupal\simpletest\">
    <violation beginline="1" rule="Stable Dependencies Principle" ruleset="Stable Dependencies Principle" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">Packages should depend in the direction of stability.

This package is more stable (0.533) than 3 package(s) that it depends on.
The packages that are more stable are

* Drupal\block\Entity (0.833)
* Drupal\Core\Utility (0.571)
* Drupal\Core\Test (0.857)</violation>
  </file>
  <file name="Drupal\simpletest\Form\SimpletestSettingsForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\simpletest\Form\SimpletestTestForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.77 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\simpletest\Form\SimpletestResultsForm">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.12 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\simpletest\WebTestBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 203)
* Component uses 515 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 49)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 5.67 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 813 logical lines of code
* Class has 1893 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\simpletest\Tests\SimpleTestBrowserTest">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.35 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\simpletest\Tests\SimpleTestTest">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 0.91 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
  </file>
  <file name="Drupal\simpletest\Tests\KernelTestBaseTest">
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.22 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 202 logical lines of code
* Class has 301 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\simpletest\TestDiscovery">
    <violation beginline="1" rule="Blob / God object" ruleset="Blob / God object" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">A blob object (or "god class") does not follow the Single responsability principle.

* object has lot of public methods  (9, excluding getters and setters)
* object has a high Lack of cohesion of methods (LCOM=6)
* object knows everything (and use lot of external classes)

Maybe you should reducing the number of methods splitting this object in many sub objects.</violation>
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 52)
* Component uses 151 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 18)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.36 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 232 logical lines of code
* Class has 449 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\simpletest\TestBase">
    <violation beginline="1" rule="Too complex class code" ruleset="Too complex class code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Total cyclomatic complexity of class is 77)
* Component uses 290 operators

Maybe you should delegate some code to other objects.</violation>
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 16)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 2.86 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 461 logical lines of code
* Class has 1234 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
  <file name="Drupal\simpletest\KernelTestBase">
    <violation beginline="1" rule="Too complex method code" ruleset="Too complex method code" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="2">This class looks really complex.

* Algorithms are complex (Max cyclomatic complexity of class methods is 11)

Maybe you should delegate some code to other objects or split complex method.</violation>
    <violation beginline="1" rule="Probably bugged" ruleset="Probably bugged" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="3">This component contains in theory 1.39 bugs.

* Calculation is based on number of operators, operands, cyclomatic complexity
* See more details at https://en.wikipedia.org/wiki/Halstead_complexity_measures
*  testsuites has dependency to this class.

Maybe you should check your unit tests for this class.</violation>
    <violation beginline="1" rule="Too long" ruleset="Too long" externalInfoUrl="http://www.phpmetrics.org/documentation/index.html" priority="4">This class looks really long.

* Class has 254 logical lines of code
* Class has 549 lines of code

Maybe your class should not exceed 200 lines of logical code</violation>
  </file>
</pmd>
